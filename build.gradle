description = 'Gatling stress tests'

apply plugin: 'scala'

repositories {
    mavenCentral()
}

ext {
  SCALA_VERSION = "2.9.3"
  GATLING_VERSION = "2.0.0-RC5"
  GATLING_HIGHCHARTS_VERSION = "2.0.0-RC4"
}

dependencies {
    testCompile "org.scala-lang:scala-library:${SCALA_VERSION}"
    testCompile "io.gatling.highcharts:gatling-charts-highcharts:${GATLING_HIGHCHARTS_VERSION}"
    testCompile "io.gatling:gatling-app:${GATLING_VERSION}"
    testCompile "io.gatling:gatling-core:${GATLING_VERSION}"
    testCompile "io.gatling:gatling-jdbc:${GATLING_VERSION}"
    testCompile "io.gatling:gatling-recorder:${GATLING_VERSION}"
}

sourceSets {
    test {
        scala {
            srcDir 'simulations'
        }
        resources {
            srcDir 'resources'
        }
    }
}

task gatling(dependsOn: ['processTestResources', 'compileTestScala']) << {
    javaexec {
      standardInput = System.in
      main = 'io.gatling.app.Gatling'
      classpath = sourceSets.test.output + sourceSets.test.runtimeClasspath

      jvmArgs = [
        '-Xmx1024M',
        '-Xms1024M',
        '-Xss1m',
        '-XX:MaxPermSize=256M'
      ]

      args '-sbf', sourceSets.test.output.classesDir,
           '-rf', file('reports'),
           '-df', sourceSets.test.output.resourcesDir,
           '-s', simulation
    }
}

task recorder(dependsOn: ['processTestResources', 'compileTestScala']) << {
    javaexec {
      standardInput = System.in
      main = 'io.gatling.recorder.GatlingRecorder'
      classpath = sourceSets.test.output + sourceSets.test.runtimeClasspath
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '1.12'
}
